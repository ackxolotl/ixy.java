// Include the necessary Gradle plugins
plugins {
	id 'java-library' // Java library support
}

// Set the source and target compatibility of this subproject to Java 11
sourceCompatibility = 1.11
targetCompatibility = 1.11

// Define the dependencies and their types (compile, runtime, test, etc.)
dependencies {
	implementation     group: 'org.jetbrains',     name: 'annotations',          version: '16.0.2'
	testImplementation group: 'org.jetbrains',     name: 'annotations',          version: '16.0.2'
	compileOnly        group: 'org.slf4j',         name: 'slf4j-api',            version: '1.8.0-beta4'
	testRuntimeOnly    group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.5.0-M1'
	testCompile        group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: '5.5.0-M1'

	// Add Logback based on if the DEBUG flag is enabled
	if (project.DEBUG) {
		testCompile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
	} else {
		testCompile group: 'org.slf4j', name: 'slf4j-nop', version: '1.8.0-beta4'
	}
}

// Exclude the tests that will fail always if no NICs are available
test {
	// If debug mode is enabled, configure Logback
	if (project.DEBUG) systemProperty 'logback.configurationFile', 'logback-test.xml'

	// Enable JUnit 5 and execute all tests always
	useJUnitPlatform { failFast = false }

	// Configure Gradle's default test logger
	testLogging {
		events = ['passed', 'failed', 'skipped']
		showStandardStreams = true
	}

	// Configure the Gradle Test Logger plugin
	testlogger {
		theme 'mocha-parallel'
		showExceptions true
		slowThreshold 2000
		showSummary true
		showPassed true
		showSkipped true
		showFailed true
		showStandardStreams true
		showPassedStandardStreams true
		showSkippedStandardStreams true
		showFailedStandardStreams true
	}

	// Disable the tests that will always fail
	def virtioCount = System.env['IXY_VIRTIO_COUNT'];
	if (virtioCount == null || ! virtioCount ==~ /^[1-9]+[0-9]*$/ || Integer.parseInt(virtioCount) <= 0) {
		exclude '**/PciVirtioTest.class'
	}
	def ixgbeCount = System.env['IXY_IXGBE_COUNT'];
	if (ixgbeCount == null || ! ixgbeCount ==~ /^[1-9]+[0-9]*$/ || Integer.parseInt(ixgbeCount) <= 0) {
		exclude '**/PciIxgbeTest.class'
	}
}
